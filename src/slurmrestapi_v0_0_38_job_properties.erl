-module(slurmrestapi_v0_0_38_job_properties).

-export([encode/1]).

-export_type([slurmrestapi_v0_0_38_job_properties/0]).

-type slurmrestapi_v0_0_38_job_properties() ::
    #{ 'account' => binary(),
       'account_gather_frequency' => binary(),
       'argv' => list(),
       'array' => binary(),
       'batch_features' => binary(),
       'begin_time' => integer(),
       'burst_buffer' => binary(),
       'cluster_constraint' => binary(),
       'comment' => binary(),
       'constraints' => binary(),
       'container' => binary(),
       'core_specification' => integer(),
       'cores_per_socket' => integer(),
       'cpu_binding' => binary(),
       'cpu_binding_hint' => binary(),
       'cpu_frequency' => binary(),
       'cpus_per_gpu' => binary(),
       'cpus_per_task' => integer(),
       'current_working_directory' => binary(),
       'deadline' => binary(),
       'delay_boot' => integer(),
       'dependency' => binary(),
       'distribution' => binary(),
       'environment' := maps:map(),
       'exclusive' => binary(),
       'get_user_environment' => boolean(),
       'gres' => binary(),
       'gres_flags' => binary(),
       'gpu_binding' => binary(),
       'gpu_frequency' => binary(),
       'gpus' => binary(),
       'gpus_per_node' => binary(),
       'gpus_per_socket' => binary(),
       'gpus_per_task' => binary(),
       'hold' => boolean(),
       'kill_on_invalid_dependency' => boolean(),
       'licenses' => binary(),
       'mail_type' => binary(),
       'mail_user' => binary(),
       'mcs_label' => binary(),
       'memory_binding' => binary(),
       'memory_per_cpu' => integer(),
       'memory_per_gpu' => integer(),
       'memory_per_node' => integer(),
       'minimum_cpus_per_node' => integer(),
       'minimum_nodes' => boolean(),
       'name' => binary(),
       'nice' => integer(),
       'no_kill' => boolean(),
       'nodes' => list(),
       'open_mode' => binary(),
       'oversubscribe' => boolean(),
       'partition' => binary(),
       'prefer' => binary(),
       'priority' => binary(),
       'qos' => binary(),
       'requeue' => boolean(),
       'reservation' => binary(),
       'signal' => binary(),
       'sockets_per_node' => integer(),
       'spread_job' => boolean(),
       'standard_error' => binary(),
       'standard_input' => binary(),
       'standard_output' => binary(),
       'tasks' => integer(),
       'tasks_per_core' => integer(),
       'tasks_per_node' => integer(),
       'tasks_per_socket' => integer(),
       'thread_specification' => integer(),
       'threads_per_core' => integer(),
       'time_limit' => integer(),
       'time_minimum' => integer(),
       'wait_all_nodes' => boolean(),
       'wckey' => binary()
     }.

encode(#{ 'account' := Account,
          'account_gather_frequency' := AccountGatherFrequency,
          'argv' := Argv,
          'array' := Array,
          'batch_features' := BatchFeatures,
          'begin_time' := BeginTime,
          'burst_buffer' := BurstBuffer,
          'cluster_constraint' := ClusterConstraint,
          'comment' := Comment,
          'constraints' := Constraints,
          'container' := Container,
          'core_specification' := CoreSpecification,
          'cores_per_socket' := CoresPerSocket,
          'cpu_binding' := CpuBinding,
          'cpu_binding_hint' := CpuBindingHint,
          'cpu_frequency' := CpuFrequency,
          'cpus_per_gpu' := CpusPerGpu,
          'cpus_per_task' := CpusPerTask,
          'current_working_directory' := CurrentWorkingDirectory,
          'deadline' := Deadline,
          'delay_boot' := DelayBoot,
          'dependency' := Dependency,
          'distribution' := Distribution,
          'environment' := Environment,
          'exclusive' := Exclusive,
          'get_user_environment' := GetUserEnvironment,
          'gres' := Gres,
          'gres_flags' := GresFlags,
          'gpu_binding' := GpuBinding,
          'gpu_frequency' := GpuFrequency,
          'gpus' := Gpus,
          'gpus_per_node' := GpusPerNode,
          'gpus_per_socket' := GpusPerSocket,
          'gpus_per_task' := GpusPerTask,
          'hold' := Hold,
          'kill_on_invalid_dependency' := KillOnInvalidDependency,
          'licenses' := Licenses,
          'mail_type' := MailType,
          'mail_user' := MailUser,
          'mcs_label' := McsLabel,
          'memory_binding' := MemoryBinding,
          'memory_per_cpu' := MemoryPerCpu,
          'memory_per_gpu' := MemoryPerGpu,
          'memory_per_node' := MemoryPerNode,
          'minimum_cpus_per_node' := MinimumCpusPerNode,
          'minimum_nodes' := MinimumNodes,
          'name' := Name,
          'nice' := Nice,
          'no_kill' := NoKill,
          'nodes' := Nodes,
          'open_mode' := OpenMode,
          'oversubscribe' := Oversubscribe,
          'partition' := Partition,
          'prefer' := Prefer,
          'priority' := Priority,
          'qos' := Qos,
          'requeue' := Requeue,
          'reservation' := Reservation,
          'signal' := Signal,
          'sockets_per_node' := SocketsPerNode,
          'spread_job' := SpreadJob,
          'standard_error' := StandardError,
          'standard_input' := StandardInput,
          'standard_output' := StandardOutput,
          'tasks' := Tasks,
          'tasks_per_core' := TasksPerCore,
          'tasks_per_node' := TasksPerNode,
          'tasks_per_socket' := TasksPerSocket,
          'thread_specification' := ThreadSpecification,
          'threads_per_core' := ThreadsPerCore,
          'time_limit' := TimeLimit,
          'time_minimum' := TimeMinimum,
          'wait_all_nodes' := WaitAllNodes,
          'wckey' := Wckey
        }) ->
    #{ 'account' => Account,
       'account_gather_frequency' => AccountGatherFrequency,
       'argv' => Argv,
       'array' => Array,
       'batch_features' => BatchFeatures,
       'begin_time' => BeginTime,
       'burst_buffer' => BurstBuffer,
       'cluster_constraint' => ClusterConstraint,
       'comment' => Comment,
       'constraints' => Constraints,
       'container' => Container,
       'core_specification' => CoreSpecification,
       'cores_per_socket' => CoresPerSocket,
       'cpu_binding' => CpuBinding,
       'cpu_binding_hint' => CpuBindingHint,
       'cpu_frequency' => CpuFrequency,
       'cpus_per_gpu' => CpusPerGpu,
       'cpus_per_task' => CpusPerTask,
       'current_working_directory' => CurrentWorkingDirectory,
       'deadline' => Deadline,
       'delay_boot' => DelayBoot,
       'dependency' => Dependency,
       'distribution' => Distribution,
       'environment' => Environment,
       'exclusive' => Exclusive,
       'get_user_environment' => GetUserEnvironment,
       'gres' => Gres,
       'gres_flags' => GresFlags,
       'gpu_binding' => GpuBinding,
       'gpu_frequency' => GpuFrequency,
       'gpus' => Gpus,
       'gpus_per_node' => GpusPerNode,
       'gpus_per_socket' => GpusPerSocket,
       'gpus_per_task' => GpusPerTask,
       'hold' => Hold,
       'kill_on_invalid_dependency' => KillOnInvalidDependency,
       'licenses' => Licenses,
       'mail_type' => MailType,
       'mail_user' => MailUser,
       'mcs_label' => McsLabel,
       'memory_binding' => MemoryBinding,
       'memory_per_cpu' => MemoryPerCpu,
       'memory_per_gpu' => MemoryPerGpu,
       'memory_per_node' => MemoryPerNode,
       'minimum_cpus_per_node' => MinimumCpusPerNode,
       'minimum_nodes' => MinimumNodes,
       'name' => Name,
       'nice' => Nice,
       'no_kill' => NoKill,
       'nodes' => Nodes,
       'open_mode' => OpenMode,
       'oversubscribe' => Oversubscribe,
       'partition' => Partition,
       'prefer' => Prefer,
       'priority' => Priority,
       'qos' => Qos,
       'requeue' => Requeue,
       'reservation' => Reservation,
       'signal' => Signal,
       'sockets_per_node' => SocketsPerNode,
       'spread_job' => SpreadJob,
       'standard_error' => StandardError,
       'standard_input' => StandardInput,
       'standard_output' => StandardOutput,
       'tasks' => Tasks,
       'tasks_per_core' => TasksPerCore,
       'tasks_per_node' => TasksPerNode,
       'tasks_per_socket' => TasksPerSocket,
       'thread_specification' => ThreadSpecification,
       'threads_per_core' => ThreadsPerCore,
       'time_limit' => TimeLimit,
       'time_minimum' => TimeMinimum,
       'wait_all_nodes' => WaitAllNodes,
       'wckey' => Wckey
     }.
